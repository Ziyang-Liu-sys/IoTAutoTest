[pytest]

# addopts = --alluredir=temps --clean-alluredir -s -m "battery_battery_level or device_info_lon or iot_device_iot_power or lock_unlock or lock_unlock or ring_doorbell_ring_doorbell or lock_door_event" --driver edge
addopts = --alluredir=temps --clean-alluredir -s -m lock_lock --driver edge
# addopts = --alluredir=temps --clean-alluredir -s -m "ring_doorbell_ring_doorbell or lock_door_event" --driver edge
markers = 
 battery_battery_level

 lock_door_event
 ring_doorbell_ring_doorbell
 battery_low_battery
 lock_door_abnormal
 lock_wrong_attempts_warning_passcode
 lock_wrong_attempts_warning_palm
 lock_lock_abnormal
 lock_lock_event
 lock_unlock_event
 lock_passcode_event
 lock_palm_vein_event

 iot_device_iot_power
 device_info_lon

 lock_lock
 lock_unlock
 lock_lock_install_mode_check
 lock_gyroscope_calibration
 lock_add_passcode
 lock_delete_passcode
 lock_add_palm_vein
 lock_delete_palm_vein
 lock_add_one_time_code
 lock_get_one_time_code
 lock_clear_one_time_code
 iot_device_restart
 iot_device_upgrade_2
 iot_device_submit_log
 iot_device_reset



 iot_device_server_migration

 
; 日志配置
log_file = ./logs/pytest.log
log_file_level = info
log_file_mode = w
log_file_format = %(levelname)-8s %(asctime)s [%(name)s:%(lineno)s] : %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
; 记录用例执行结果
result_log_enable = 1
; 记录用例分割线
result_log_separator = 1
;分割线等级
result_log_level_separator = warning
;异常信息等级
result_log_level_verbose = info